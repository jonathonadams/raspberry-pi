---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
  namespace: nextcloud
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: bitnami/redis
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: pass
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: nextcloud
spec:
  selector:
    app: redis
  ports:
    - port: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
  namespace: nextcloud
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-pv-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
      containers:
        - name: postgres
          image: postgres:alpine
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data/pgdata"
              name: postgres-pv-storage
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: nextcloud
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db
                  key: pass
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: nextcloud
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud-deployment
  labels:
    app: nextcloud
  namespace: nextcloud
spec:
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      volumes:
        - name: nextcloud-pv-storage
          persistentVolumeClaim:
            claimName: nextcloud-pv-claim
      containers:
        - name: nextcloud
          image: nextcloud
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: "/var/www/html"
              name: nextcloud-pv-storage
          ports:
            - containerPort: 80
          env:
            - name: NEXTCLOUD_TRUSTED_DOMAINS
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: trusted-domains
              value: "your.domain.here"
            - name: POSTGRES_DB
              value: nextcloud
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db
                  key: pass
            - name: POSTGRES_HOST
              value: postgres
            - name: REDIS_HOST
              value: redis
            - name: REDIS_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: pass
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
  namespace: nextcloud
spec:
  selector:
    app: nextcloud
  ports:
    - name: http
      port: 80
